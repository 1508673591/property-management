<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.YuXiuHui.modules.shopping.dao.ShoppingDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.YuXiuHui.modules.shopping.entity.ShoppingEntity" id="shoppingMap">
		<result property="id" column="id"/>
		<result property="goodsId" column="goods_id"/>
		<result property="memberId" column="member_id"/>
		<result property="tag" column="goods_title"/>
        <result property="goodsImg" column="goods_img"/>
		<result property="picUrl" column="pic_url"/>
		<result property="goodsDesc" column="goods_desc"/>
        <result property="goodsPrice" column="goods_price"/>
        <result property="createTime" column="create_time"/>

		<association property="member" javaType="com.YuXiuHui.modules.member.entity.MemberEntity">
			<result  property="realName"  column="real_name"/>

		</association>

    </resultMap>

	<select id="queryObject" resultType="com.YuXiuHui.modules.shopping.entity.ShoppingEntity">
		select
			s.id,
			s.goods_id ,
			s.member_id,
			s.goods_title  tag,
			s.goods_img,
			s.pic_url picUrl,
			s.goods_desc,
			s.goods_price,
			s.create_time,
			m.real_name 'member.realName'
		from p_shopping  s left join base_member m on m.id = s.member_id where s.goods_id = #{value}
	</select>

	<select id="queryList" resultMap="shoppingMap">
		select s.id,
		 s.goods_id ,
		 s.member_id,
		 s.goods_title ,
		 s.goods_img,
		 s.pic_url,
		 s.goods_desc,
		 s.goods_price,
		 s.create_time,
		 m.real_name
		from p_shopping s left join base_member m on m.id = s.member_id
		<where>
			<if test="goodsId != null and goodsId.trim() != ''">
				and `goods_id` like concat('%',#{goodsId},'%')
			</if>
			<if test="memberId != null">
				and s.member_id = #{memberId}
			</if>
		</where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(1) from p_shopping
	</select>
	 
	<insert id="save" parameterType="com.YuXiuHui.modules.shopping.entity.ShoppingEntity" useGeneratedKeys="true" keyProperty="id">
		insert into p_shopping
		(
			`goods_id`,
			`goods_title`,
			`member_id`, 
			`goods_img`,
			`pic_url`,
			`goods_price`,
			`goods_desc`,
			`create_time`
		)
		values
		(
			#{goodsId},
			#{tag},
			#{memberId}, 
			#{goodsImg},
			#{picUrl},
			#{goodsPrice},
			#{goodsDesc},
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.YuXiuHui.modules.shopping.entity.ShoppingEntity">
		update p_shopping
		<set>
			<if test="goodsId != null">`goods_id` = #{goodsId}, </if>
			<if test="tag != null">`goods_title` = #{tag}, </if>
			<if test="memberId != null">`member_id` = #{memberId}, </if>
			<if test="goodsImg != null">`goods_img` = #{goodsImg}, </if>
			<if test="picUrl != null">`pic_url` = #{picUrl}, </if>
			<if test="goodsPrice != null">`goods_price` = #{goodsPrice}, </if>
			<if test="goodsDesc != null">`goods_desc` = #{goodsDesc}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from p_shopping where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from p_shopping where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>